// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalksApi.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NZWalksApi.Migrations
{
    [DbContext(typeof(ISWalksDbContext))]
    [Migration("20240522164242_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NZWalksApi.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3795b306-830b-4856-a201-88560e737912"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("37424cdc-ee37-4e18-8c6a-c3220a514d3c"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("3482f6ad-0168-47f9-ab8e-47bfe3b64caa"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalksApi.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegionImgUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e8d3572-6583-4483-93c3-f1b44dab0ec2"),
                            Code = "NZH",
                            Name = "Nazhvan",
                            RegionImgUrl = "nazhvanpic.jpg"
                        },
                        new
                        {
                            Id = new Guid("1348229d-e55f-42ba-baf8-bf325b0318ef"),
                            Code = "JLF",
                            Name = "Jolfa",
                            RegionImgUrl = "Jolfapic.jpg"
                        },
                        new
                        {
                            Id = new Guid("1590bc6d-357e-44a4-87b7-8a463661c9ad"),
                            Code = "HKM",
                            Name = "HAkim Nezami",
                            RegionImgUrl = "HakimNezamipic.jpg"
                        });
                });

            modelBuilder.Entity("NZWalksApi.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uuid");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<string>("WalkImgurl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalksApi.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalksApi.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalksApi.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
